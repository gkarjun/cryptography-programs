#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/des.h>

// Function to perform 3DES encryption in CBC mode
void encrypt_CBC_3DES(const unsigned char *plaintext, int plaintext_len, const unsigned char *key,
                      const unsigned char *iv, unsigned char *ciphertext) {
    DES_cblock key1, key2, key3, ivec;
    DES_key_schedule schedule1, schedule2, schedule3;

    // Set the keys
    memcpy(key1, key, 8);
    memcpy(key2, key + 8, 8);
    memcpy(key3, key + 16, 8);

    // Set the initialization vector
    memcpy(ivec, iv, 8);

    // Set up the encryption schedules
    DES_set_key((DES_cblock *)key1, &schedule1);
    DES_set_key((DES_cblock *)key2, &schedule2);
    DES_set_key((DES_cblock *)key3, &schedule3);

    // Encrypt the plaintext in CBC mode
    DES_ede3_cbc_encrypt(plaintext, ciphertext, plaintext_len, &schedule1, &schedule2, &schedule3, &ivec, DES_ENCRYPT);
}

int main() {
    unsigned char key[24] = "1234567890abcdef123456"; // 24-byte (192-bit) 3DES key
    unsigned char iv[8] = "12345678"; // 8-byte initialization vector
    const char *plaintext = "Hello, world!";
    unsigned char ciphertext[1024]; // Make sure it's large enough to hold the encrypted data

    printf("Plaintext: %s\n", plaintext);

    // Encrypt the plaintext
    encrypt_CBC_3DES((unsigned char *)plaintext, strlen(plaintext), key, iv, ciphertext);

    printf("Ciphertext: ");
    for (int i = 0; i < strlen(plaintext); i++) {
        printf("%02X", ciphertext[i]);
    }
    printf("\n");

    return 0;
}
